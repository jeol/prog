import java.util.Random;

public class Test {
	public int[][] board;
	public int pushRand;
	public Test(int pushRand) {// [1,array.length] - default 0 just produces random, as well as any unreal (out of range) given int.
		this.board = new int[9][9];
		int[][][] array = {
			{
				{ 6, 3,-1,-1,-1,-1, 5,-1,-1},
				{ 9, 2,-1, 8,-1, 1, 4, 3,-1},
				{-1,-1, 4,-1,-1, 5,-1,-1,-1},
				{-1, 8,-1, 1, 7, 4, 2,-1,-1},
				{-1,-1,-1, 6,-1, 8,-1,-1,-1},
				{-1,-1, 9, 5, 3, 2,-1, 8,-1},
				{-1,-1,-1, 7,-1,-1, 8,-1,-1},
				{-1, 5, 8, 2,-1, 9,-1, 7, 4},
				{-1,-1, 2,-1,-1,-1,-1, 5, 3}
			},
			{
				{-1, 4,-1,-1,-1, 6, 2, 5, 9},
				{-1,-1,-1, 9, 8,-1,-1,-1,-1},
				{ 6,-1,-1,-1, 2,-1,-1, 7, 4},
				{ 4,-1,-1,-1,-1, 1, 6,-1,-1},
				{-1, 1, 9, 3,-1, 8, 4, 2,-1},
				{-1,-1, 6, 4,-1,-1,-1,-1, 5},
				{ 3, 6,-1,-1, 1,-1,-1,-1, 2},
				{-1,-1,-1,-1, 9, 2,-1,-1,-1},
				{ 9, 7, 2, 6,-1,-1,-1, 1,-1}
			},
			{
				{-1, 3, 8,-1, 7,-1,-1, 2,-1},
				{ 1,-1, 6,-1, 8, 3,-1,-1, 5},
				{-1,-1, 2, 4,-1, 1,-1,-1, 8},
				{-1, 6,-1, 7,-1,-1, 2, 9,-1},
				{-1, 5,-1,-1,-1,-1,-1, 6,-1},
				{-1, 1, 7,-1,-1, 4,-1, 8,-1},
				{ 6,-1,-1, 9,-1, 7, 3,-1,-1},
				{ 3,-1,-1, 1, 6,-1, 9,-1, 4},
				{-1, 4,-1,-1, 5,-1, 8, 1,-1}}
//			,
//			{
//				{ 4, 3, 8, 5, 7, 6, 1, 2, 9},
//				{ 1, 9, 6, 2, 8, 3, 7, 4, 5},
//				{ 5, 7, 2, 4, 9, 1, 6, 3, 8},
//				{ 8, 6, 4, 7, 3, 5, 2, 9, 1},
//				{ 2, 5, 3, 8, 1, 9, 4, 6, 7},
//				{ 9, 1, 7, 6, 2, 4, 5, 8, 3},
//				{ 6, 8, 1, 9, 4, 7, 3, 5, 2},
//				{ 3, 2, 5, 1, 6, 8, 9, 7, 4},
//				{ 7, 4, 9, 3, 5, 2, 8, 1, 6}
//			} // for testing purposes - solved #3
		};
		Random rand = new Random();
		
		int pick = (pushRand>0 && pushRand <= array.length) ? pushRand - 1 : rand.nextInt(array.length);
		
		this.board = array[pick];
	}
}
